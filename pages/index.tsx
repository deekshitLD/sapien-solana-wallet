/* eslint-disable @next/next/link-passhref */

import React, { useEffect, useContext } from "react";
import { NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import styles from "../styles/Home.module.css";
import { Button, Box, ButtonGroup } from "@chakra-ui/react";
import { SignMessageButton } from "../src/components/signMessageButton";
import { Heading } from "@chakra-ui/react";
import router from "next/router";
import {
  WalletMultiButton,
} from "@solana/wallet-adapter-react-ui";

import { useWallet } from "@solana/wallet-adapter-react";

import bs58 from "bs58";

import Layout from "../src/components/Layout";

import Web3 from "@solana/web3.js";

import * as splGovernance from "@solana/spl-governance";
import { Connection, PublicKey } from "@solana/web3.js";

import * as splToken from "@solana/spl-token";
import Image from "next/image";

import { UserContext } from "../src/components/HOC/withAuth";

import {
  ASSOCIATED_TOKEN_PROGRAM_ID,
  TOKEN_PROGRAM_ID,
} from "@solana/spl-token";
import Header from "../src/components/home/header";
import Footer from "../src/components/home/footer";
//import Pagination from "../src/components/home/Pagination";

import Home from "../src/components/home";


const HomePage: any = () => {
  const wallet = useWallet();
  const { publicKey } = wallet;

  const { value }: any = useContext(UserContext);
  const [loggedIn, setLoggedIn] = value;
  const convertBS58 = (publicKey: any) => {
    // let utf8Encode = new TextEncoder();

    // const bytes = utf8Encode.encode(publicKey);
    // var result = [];

    // for (var i = 0; i < publicKey.length; i += 2) {
    //   result.push(parseInt(publicKey.substring(i, i + 2), 16));
    // }
    // let bytes =   Uint8Array.from(result);
    // const address = bs58.encode(bytes);
    // return address;

    let uint8ArrMessage = new Uint8Array(publicKey.split(""));
    const address = bs58.encode(uint8ArrMessage);

    return address;
  };

  useEffect(() => {
    if (wallet.connected && localStorage.getItem("token")) {
      setLoggedIn(true);
    } else {
      setLoggedIn(false);
    }
  }, [wallet, localStorage]);
  return (
    <div>
      <Head>
        <title>Sapien News</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/SapienNews.jpeg" />
      </Head>

      <main className={styles.main}>
        <Header />
        {/*
         <Heading as="h1" size="4xl">
          <span className={styles.animateCharcter}>
            {" "}

          </span>
        </Heading>

        <Heading as="h2" size="lg" margin={10}>
          The ðŸŒŽ of Un-biased media
        </Heading> */}

          <>
            <Home />
          </>

          {/* Pagination */}
          {/* <>
            <Pagination />
          </> */}
      </main>
      <Footer />
      <div></div>
    </div>
  );
};

HomePage.getLayout = function getLayout(page: NextPage) {
  return <Layout>{page}</Layout>;
};

export default HomePage;
